<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
											http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>com.gnoras</groupId>
		<artifactId>maple</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>

	<artifactId>maple-webapp</artifactId>
	<packaging>war</packaging>

	<name>Maple Web</name>

	<properties>
		<cxf.version>2.2.7</cxf.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<profiles>

		<profile>
		
			<id>devlocal</id>
			
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
			
				<resources>
					<resource>
						<directory>src/main/config/standard</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/config/devlocal</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				
			</build>
			
			<properties>
				<placeHolderJdbcConnectionProp>classpath:jdbc.connection.properties</placeHolderJdbcConnectionProp>
				<placeHolderJdbcProp>classpath:jdbc.properties</placeHolderJdbcProp>
			</properties>
			
		</profile>

		<profile>
		
			<id>jetty</id>
			
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<build>
			
				<plugins>

					<plugin> <!-- Support for running Jetty outside of the default lifecycle (for running eclipse debugger) -->

						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<version>6.1.16</version>

						<configuration>
							<scanIntervalSeconds>3</scanIntervalSeconds>
							<contextPath>/maple</contextPath>
						</configuration>

					</plugin>

				</plugins>

			</build>
			
		</profile>

		<profile>
		
			<id>rtm</id>
			
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<build>
			
				<resources>
					<resource>
						<directory>src/main/config/standard</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/config/rtm</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<version>1.1</version>
						<configuration>
							<url>http://maple.dev.gnoras.com:8080/manager</url>
							<server>grouper</server>
							<path>/maple</path>
						</configuration>
					</plugin>
				</plugins>
				
			</build>
			
			<properties>
				<placeHolderJdbcConnectionProp>classpath:jdbc.connection.properties</placeHolderJdbcConnectionProp>
				<placeHolderJdbcProp>classpath:jdbc.properties</placeHolderJdbcProp>
			</properties>
			
		</profile>

		<profile>
		
			<id>xpr-mysql-socket</id>
			
			<build>
			<!--
			<dependency>
				<groupId>com.gnoras</groupId>
				<artifactId>junixsocket</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>com.gnoras</groupId>
				<artifactId>junixsocket-mysql</artifactId>
				<version>1.3.1</version>
			</dependency>
			-->
			
				<resources>
					<resource>
						<directory>src/main/config/standard</directory>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/config/xpr-mysql-socket</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<version>1.1</version>
						<configuration>
							<url>http://maple.test.gnoras.com:8080/manager</url>
							<server>grouper</server>
							<path>/maple</path>
						</configuration>
					</plugin>
				</plugins>
				
			</build>
			
			<properties>
				<placeHolderJdbcConnectionProp>classpath:jdbc.connection.properties</placeHolderJdbcConnectionProp>
				<placeHolderJdbcProp>classpath:jdbc.properties</placeHolderJdbcProp>
			</properties>
			
		</profile>

	</profiles>

	<build>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1</version>
				<!--
				<configuration>
					<webResources>
						<resource>
							<directory>src/site/resources</directory>
							<excludes>
								<exclude>*~</exclude>
							</excludes>
							<filtering>false</filtering>
						</resource>
					</webResources>
				</configuration>
				-->
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<mkdir dir="${project.build.outputDirectory}"/>
								<echo>Deleting *.properties and *.xml from ${project.build.outputDirectory}</echo>
								<delete>
									<fileset dir="${project.build.outputDirectory}" includes="*.properties"/>
									<fileset dir="${project.build.outputDirectory}" includes="*.xml"/>
								</delete>
								<echo>Deleting *.log from ${basedir}/src/main/webapp/WEB-INF/</echo>
								<delete>
									<fileset dir="${basedir}/src/main/webapp/WEB-INF/" includes="*.log"/>
								</delete>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.
-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
 					<version>1.0.0</version>
<!--  -->					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<dependencies>

		<dependency>
			<groupId>com.gnoras</groupId>
			<artifactId>maple-core</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.charliehubbard</groupId>
			<artifactId>flexjson</artifactId>
			<version>1.9.2</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<!--
				provides is the correct setting w/regard to Jetty or Tomcat, 
				but Eclipse doesn't find it
			<scope>provided</scope>
			-->
			<scope>compile</scope>
		</dependency>

 		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.10</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Required for restful services -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<scope>compile</scope>
		</dependency>
 		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<scope>compile</scope>
		</dependency> 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.5</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>runtime</scope> <!-- Needed by the implementation classes... Jetty throws exception if not present -->
		</dependency>

		<!-- Start: integration tests
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.dyuproject.protostuff</groupId>
			<artifactId>protostuff-api</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.dyuproject.protostuff</groupId>
			<artifactId>protostuff-collectionschema</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.dyuproject.protostuff</groupId>
			<artifactId>protostuff-runtime</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
-->
		<!-- End: integration tests -->

	</dependencies>
</project>
